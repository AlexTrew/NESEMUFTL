* nesemuftl 
** cpu
*** [[https://www.nesdev.org/wiki/Instruction_reference][instructions]] 
**** addressing modes
***** immediate addressing
this is the simplest addressing mode for an instruction type:
the first byte contains the opcode and the second contains the data
**** opcodes
***** processing opcodes
read the opcode,
lookup the instruction info in the table (make a table!)
determine how many cycles are needed.
if no cycles needed, read the next instruction.

* learning notes!
Thinking through a problem by writing it out is a great way of seeing where the holes in my knowledge are. I should do more of it!
`static` in c is quite cool, both for functions and for variables 
I shouldn't be afraid to really explore a problem before speeding off to implement a solution
